(ns dailp-ingest-clj.core-fiddle
  (:require [clojure.edn :as edn]
            [dailp-ingest-clj.core :as core]
            [dailp-ingest-clj.old-io :as old-io]
            [dailp-ingest-clj.utils :as u]
            [dailp-ingest-clj.resources :as resources]
            [inflections.core :refer [plural]]
            [old-client.core :as oc]))

(defn ingest-to-x
  "Ingest Cherokee data to Local Development OLD"
  [x]
  (u/just-then-esc
   (u/load-edn "SECRETS.edn")
   (fn [{olds :olds}]
     (let [{:keys [url username password]} (x olds)]
       (core/ingest url username password)))
   (fn [error]
     (let [msg (format "An error occurred ingesting to %s. Error: %s"
                       x error)]
       (print msg)
       msg))))

(def ingest-to-local (partial ingest-to-x :local))
(def ingest-to-dailp-dev (partial ingest-to-x :dailp-dev))
(def ingest-to-dailp-prod (partial ingest-to-x :dailp-prod))

(comment

  (ingest-to-local)

  ;; TODO: return here. As of 2020-03-23, I was getting 500 errors from the DAILP
  ;; Dev OLD when trying to run ingest. Until my sponsored NEU account is back up
  ;; and running, I cannot deal with this. Error: Internal Server Error. The
  ;; server encountered an unexpected internal server error. (generated by waitress.
  (ingest-to-dailp-dev)

  (-> (u/get-local-client)
      core/analyze
      time
      with-out-str)

  ;; Login to a Local DAILP Development OLD
  (u/just-then
   (u/load-edn "SECRETS.edn")
   (fn [{{local-dev-creds :local} :olds}]
     (oc/make-old-client local-dev-creds)))

  ;; Login to DAILP Development OLD
  (u/just-then
   (u/load-edn "SECRETS.edn")
   (fn [{{dailp-dev-creds :dailp-dev} :olds}]
     (oc/make-old-client dailp-dev-creds)))

  ;; Login to DAILP Production OLD
  (u/just-then
   (u/load-edn "SECRETS.edn")
   (fn [{{dailp-prod-creds :dailp-prod} :olds}]
     (oc/make-old-client dailp-prod-creds)))

  ;; Ingest Cherokee data to Local Development OLD
  (u/just-then
   (u/load-edn "SECRETS.edn")
   (fn [{{{:keys [url username password]} :local} :olds}]
     (core/ingest url username password)))

  (u/just-then
   (u/load-edn "SECRETS.edn")
   (fn [{{local-creds :local
          dailp-dev-creds :dailp-dev} :olds}]
     (-> dailp-dev-creds
         oc/make-old-client
         core/analyze)))

)
